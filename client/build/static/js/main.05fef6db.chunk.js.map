{"version":3,"sources":["components/GlobalNavbar.js","components/Header.js","utils/api.js","components/SearchForm.js","components/Results.js","pages/SearchPage.js","components/SaveResults.js","pages/SavePage.js","App.js","registerServiceWorker.js","index.js"],"names":["GlobalNavbar","react_default","a","createElement","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Header","Jumbotron","API","getBooks","search","axios","get","concat","saveBook","bookData","post","SearchForm","_ref","setBooks","bookInput","useRef","Card","Body","Form","Group","Label","Control","ref","type","placeholder","Button","onClick","event","preventDefault","current","value","then","res","console","log","data","items","varitant","Results","books","map","book","key","Img","src","volumeInfo","imageLinks","thumbnail","style","width","height","Title","title","authors","Text","description","previewLink","image","link","handleSaveButton","SearchPage","_useState","useState","_useState2","Object","slicedToArray","Container","components_SearchForm","components_Results","SaveResults","SavePage","components_SaveResults","App","components_GlobalNavbar","components_Header","pages_SearchPage","pages_SavePage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.05fef6db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nfunction GlobalNavbar() {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">Google Books</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto primary\">\r\n                    <Nav.Link href=\"/\">Search</Nav.Link>\r\n                    <Nav.Link href=\"/saved\">Saved</Nav.Link>    \r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n\r\n}\r\nexport default GlobalNavbar;\r\n","import React from \"react\";\r\n\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n    return(\r\n        \r\n        <Jumbotron>\r\n            <h1>Google Books</h1>\r\n            <p>\r\n                Search Google and save your favorite books.\r\n            </p>\r\n        </Jumbotron>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst API = {\r\n\r\n    getBooks: function(search) {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=intitle:${search}`);\r\n      },\r\n\r\n    saveBook: function(bookData) {\r\n        return axios.post(\"/api/books\", bookData);\r\n      } \r\n\r\n};\r\n\r\nexport default API;\r\n\r\n","import React, { useRef }from \"react\";\r\nimport { Card, Form, Button} from \"react-bootstrap\";\r\nimport API from \"../utils/api\";\r\n\r\nfunction SearchForm({setBooks}) {\r\n\r\n    const bookInput = useRef();\r\n\r\n\r\n    const handleSubmit = event => {\r\n\r\n        event.preventDefault();\r\n        API.getBooks(bookInput.current.value)\r\n            .then((res) => {\r\n            console.log(res);\r\n            setBooks(res.data.items);\r\n        });\r\n    }\r\n\r\n    return(\r\n    <Card>\r\n        <Card.Body>\r\n            <h2>Search</h2>\r\n            <Form >\r\n                <Form.Group>\r\n                    <Form.Label ></Form.Label>\r\n                    <Form.Control ref={bookInput} type=\"text\" placeholder=\"Enter book title here\" />\r\n                </Form.Group>\r\n                <Button onClick={handleSubmit} varitant=\"dark\" type=\"submit\">\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n        </Card.Body>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport API from \"../utils/api\";\r\n\r\n\r\n\r\n\r\nfunction Results({ books }) {\r\n\r\n const handleSaveButton = (book) =>{\r\n\r\n    API.saveBook({\r\n        title: book.volumeInfo.title,\r\n        authors: book.volumeInfo.authors,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks.thumbnail,\r\n        link: book.volumeInfo.previewLink\r\n    })\r\n\r\n }\r\n\r\n    return (\r\n        <div>\r\n            {books.map(book => {\r\n                return (\r\n                    <Card key={book.id}>\r\n                        <Card.Img variant=\"top\" src={book.volumeInfo.imageLinks.thumbnail} style={{width:\"200px\", height:\"250px\"}}/>\r\n                        <Card.Body>\r\n                            <Card.Title>{book.volumeInfo.title}</Card.Title>\r\n                            <h5 >{book.volumeInfo.authors}</h5>\r\n                            <Card.Text>{book.volumeInfo.description}</Card.Text>\r\n                            <Button ><a href={book.volumeInfo.previewLink} className=\"text-white\">Link to book</a></Button>\r\n                            <br />\r\n                            <Button onClick={() => handleSaveButton(book)} variant=\"primary\">Save</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Results;","import React, { useState } from \"react\";\r\n\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport Results from \"../components/Results\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction SearchPage (){\r\n\r\n  const [books, setBooks] = useState([])\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <Container className=\"py-5\">\r\n      <SearchForm setBooks={setBooks}/>\r\n      <Results books={books}/>\r\n      </Container>\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\n\r\n\r\nfunction SaveResults() {\r\n\r\n    return (\r\n        <Card >\r\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n            <Card.Body>\r\n                <Card.Title>Title</Card.Title>\r\n                <h5>Author</h5>\r\n                <Card.Text>\r\n                    Some quick example text about book\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Link to book</Button>\r\n                <br />\r\n                <Button variant=\"primary\">Delete</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SaveResults;","import React from \"react\";\r\n\r\nimport SaveResults from \"../components/SaveResults\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction SavePage (){\r\nreturn (\r\n    <div>\r\n      <Container className=\"py-5\">\r\n      <SaveResults />\r\n      </Container>\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default SavePage;","import React from \"react\";\r\nimport \"./main.sass\";\r\n\r\nimport GlobalNavbar from \"./components/GlobalNavbar\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport SearchPage from \"./pages/SearchPage\";\r\nimport SavePage from \"./pages/SavePage\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <GlobalNavbar />\r\n      <Container className=\"py-5\">\r\n      <Header />\r\n      <SearchPage />\r\n      <SavePage />\r\n      </Container>\r\n     </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}